/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistemasInteligentes.gui;

import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sistemasInteligentes.TetrisRunTest;
import sistemasInteligentes.ai.Chromosome;
import sistemasInteligentes.ai.Common;
import sistemasInteligentes.ai.Gene;

/**
 *
 * @author microraptor
 */
public class GenetrisTest extends javax.swing.JFrame {

    /**
     * Creates new form GenetrisTest
     */
    Writer writer = new Writer();
    ArrayList<String[]> genes = new ArrayList();
    TetrisRunTest rt;

    public GenetrisTest() {
        rt = new TetrisRunTest();
        initComponents();
        getGenes();
        fillTable();
    }

    public void getGenes() {
        String s = writer.leer();
        String[] genesArray = s.split("#");

        for (int i = 0; i < genesArray.length; i++) {
            //System.out.println(genesArray[i]);
            String[] curr = genesArray[i].split("&");
            genes.add(curr);
        }

    }

    public void fillTable() {
        DefaultTableModel modeloDeMiTabla = (DefaultTableModel) t_genes.getModel();
        for (int i = 0; i < genes.size(); i++) {
            modeloDeMiTabla.addRow(new Object[genes.size()]);
            t_genes.setValueAt(genes.get(i)[0], i, 0);
            t_genes.setValueAt(genes.get(i)[1], i, 1);
            t_genes.setValueAt(genes.get(i)[2], i, 2);
            t_genes.setValueAt(genes.get(i)[3], i, 3);
            t_genes.setValueAt(genes.get(i)[4], i, 4);
            t_genes.setValueAt(genes.get(i)[5], i, 5);
            t_genes.setValueAt(genes.get(i)[6], i, 6);
            t_genes.setValueAt(genes.get(i)[7], i, 7);
            t_genes.setValueAt(genes.get(i)[8], i, 8);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        t_genes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        b_playGene = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        t_genes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "HEIGHT", "CLEARS", "HOLES", "BLOCKADES", "WALLS", "FLOOR", "PARTNER", "SCORE", "GENERATIONS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(t_genes);
        if (t_genes.getColumnModel().getColumnCount() > 0) {
            t_genes.getColumnModel().getColumn(0).setResizable(false);
            t_genes.getColumnModel().getColumn(1).setResizable(false);
            t_genes.getColumnModel().getColumn(2).setResizable(false);
            t_genes.getColumnModel().getColumn(3).setResizable(false);
            t_genes.getColumnModel().getColumn(4).setResizable(false);
            t_genes.getColumnModel().getColumn(5).setResizable(false);
            t_genes.getColumnModel().getColumn(6).setResizable(false);
            t_genes.getColumnModel().getColumn(7).setResizable(false);
            t_genes.getColumnModel().getColumn(8).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Genetris-UN");

        b_playGene.setText("Set Gene");
        b_playGene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_playGeneActionPerformed(evt);
            }
        });

        jButton1.setText("Play Gene");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 365, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(361, 361, 361))
            .addGroup(layout.createSequentialGroup()
                .addGap(353, 353, 353)
                .addComponent(b_playGene)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_playGene)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_playGeneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_playGeneActionPerformed
        double gen[] = new double[7];
        if (t_genes.getSelectedRow() >= 0) {
            String[] datosLeidos
                    = {
                        String.valueOf(t_genes.getValueAt(t_genes.getSelectedRow(), 0)),
                        String.valueOf(t_genes.getValueAt(t_genes.getSelectedRow(), 1)),
                        String.valueOf(t_genes.getValueAt(t_genes.getSelectedRow(), 2)),
                        String.valueOf(t_genes.getValueAt(t_genes.getSelectedRow(), 3)),
                        String.valueOf(t_genes.getValueAt(t_genes.getSelectedRow(), 4)),
                        String.valueOf(t_genes.getValueAt(t_genes.getSelectedRow(), 5)),
                        String.valueOf(t_genes.getValueAt(t_genes.getSelectedRow(), 6)),
                        String.valueOf(t_genes.getValueAt(t_genes.getSelectedRow(), 7)),
                        String.valueOf(t_genes.getValueAt(t_genes.getSelectedRow(), 8)),};
            for (int i = 0; i < 7; i++) {
                gen[i] = Double.parseDouble(datosLeidos[i]);
            }
            Common common = Common.getInstance(1);
            Chromosome cr = new Chromosome(common);
            Gene tgen = new Gene(gen);
            cr.genes = tgen;
            
            try {
                rt.launch(cr);
            } catch (Throwable ex) {
                Logger.getLogger(GenetrisTest.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un registro");
        }
    }//GEN-LAST:event_b_playGeneActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        rt.run();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GenetrisTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GenetrisTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GenetrisTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GenetrisTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GenetrisTest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_playGene;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable t_genes;
    // End of variables declaration//GEN-END:variables
}
